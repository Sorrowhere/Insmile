//global mixin

// opacity
@mixin opacity($opacityValue: .5){
	opacity: $opacityValue;
	filter: alpha(opacity = $opacityValue * 100);
}


// mask layer property
@mixin mask{
	width: 100%;
	height: 100%;
	background-color: #000;
	position: absolute;
	top: 0;
	left: 0;
}

// Center-align a block level element
@mixin center-block{
	margin-left: auto;
	margin-right: auto;
}

// Sizing
@mixin size($width, $height){
	width: $width;
	height: $height;
}

// Text clip, width must be set
@mixin text-clip($width){
	width: $width;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

// Min height
@mixin min-height($height){
	min-height: $height;
	height: auto !important;
	@if($ie6){
		_height: $height;
	}
}

// generate block formatting context
// IE hasLayout
@mixin bfc{
	overflow: hidden;
	@if $lte7{
		*zoom:1;
	}
}

// BFC
@mixin clearfix(){
  &:before,
  &:after {
    content: " ";
    display: block;
    height: 0;
    visibility: hidden;
    font-size: 0;
  }
  &:after {
    clear: both;
  }
}


// Triangle
@mixin triangle($borderWidth){
  display: inline-block;
  width: 0;
  height: 0;
  line-height: 0;
  font-size: 0;
  border-style: dashed;
  border-color: transparent;
  border-width: $borderWidth;
}

@mixin triangle-top($borderWidth, $borderColor){
  @include triangle($borderWidth);
  border-bottom: $borderWidth solid $borderColor;
}
@mixin triangle-right($borderWidth, $borderColor){
  @include triangle($borderWidth);
  border-left:  $borderWidth solid $borderColor;
}
@mixin triangle-bottom($borderWidth, $borderColor){
  @include triangle($borderWidth);
  border-top:  $borderWidth solid $borderColor;
}
@mixin triangle-left($borderWidth, $borderColor){
  @include triangle($borderWidth);
  border-right:  $borderWidth solid $borderColor;
}
